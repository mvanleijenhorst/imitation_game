<Application x:Class="ImitationGame.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ImitationGame.Wpf"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <Grid>
                            <Border Background="Black">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="19"/>
            <Setter Property="Width" Value="46" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="Decrypt" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="300,105,0,0"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="Encrypt" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="300,138,0,0"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ExitButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="64"/>
            <Setter Property="Margin" Value="25,37,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MaxLines" Value="9"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True" />
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="EncryptedText" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="431,232,37,83" />
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="DecryptedText" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="431,50,37,260" />
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="KeyText" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="Background" Value="#B7AA99"/>
            <Setter Property="Margin" Value="301,74,421,357"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="Padding" Value="0, 5, 0, 0"/>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="Margin" Value="90,30,536,395"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" Background="Black" BorderBrush="Black" BorderThickness="1" />
                                            <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="Black"  BorderBrush="Black" BorderThickness="0,0,1,0" />
                                            <Path x:Name="Arrow" Grid.Column="1" Fill="Beige" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333333" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="AlgoritmeSelection" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="90,30,536,409" />
        </Style>
    </Application.Resources>
</Application>
